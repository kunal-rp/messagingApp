{"ast":null,"code":"import { useCookies } from 'react-cookie';\n\nconst {\n  LoginRequest\n} = require('./generated/proto/login_pb');\n\nconst {\n  LoginClient\n} = require('./generated/proto/login_grpc_web_pb');\n\nconst {\n  SampleRequest\n} = require('./generated/proto/sample_pb');\n\nconst {\n  SampleClient\n} = require('./generated/proto/sample_grpc_web_pb');\n\nvar loginService = new LoginClient('http://localhost:8080', null, null);\nvar sampleService = new SampleClient('http://localhost:8080', null, null);\nconst [cookies, setCookie] = useCookies(['jwtToken']);\nexport function loginWithToken(token, callback) {\n  var request = new LoginRequest();\n  request.setGoogleToken(token);\n  loginService.login(request, {}, function (err, response) {\n    if (err) {\n      console.log(err);\n      return;\n    }\n\n    console.log(\"done login\");\n    console.log(response.getJwtToken());\n    setCookie('jwtToken', response.getJwtToken(), {\n      path: '/',\n      secure: true,\n      httpOnly: true,\n      sameSite: true\n    });\n    callback();\n  });\n}\nexport function sampleCall() {\n  var request = new SampleRequest();\n  sampleService.sampleCall(request, {\n    'JWTTOKEN': jwtToken\n  }, function (err, response) {\n    // ...\n    console.log(\"done sampleCall\");\n    console.log(response.getUserdetails().getUserId());\n  });\n}\nexport var jwtToken;","map":{"version":3,"sources":["/Users/kunal/Desktop/Coding/messageingApp/client-web/src/client.js"],"names":["useCookies","LoginRequest","require","LoginClient","SampleRequest","SampleClient","loginService","sampleService","cookies","setCookie","loginWithToken","token","callback","request","setGoogleToken","login","err","response","console","log","getJwtToken","path","secure","httpOnly","sameSite","sampleCall","jwtToken","getUserdetails","getUserId"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAiBC,OAAO,CAAC,4BAAD,CAA9B;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAgBD,OAAO,CAAC,qCAAD,CAA7B;;AAEA,MAAM;AAACE,EAAAA;AAAD,IAAkBF,OAAO,CAAC,6BAAD,CAA/B;;AACA,MAAM;AAACG,EAAAA;AAAD,IAAiBH,OAAO,CAAC,sCAAD,CAA9B;;AAEA,IAAII,YAAY,GAAG,IAAIH,WAAJ,CAAgB,uBAAhB,EAAwC,IAAxC,EAA6C,IAA7C,CAAnB;AACA,IAAII,aAAa,GAAG,IAAIF,YAAJ,CAAiB,uBAAjB,EAAyC,IAAzC,EAA8C,IAA9C,CAApB;AAEA,MAAM,CAACG,OAAD,EAAUC,SAAV,IAAuBT,UAAU,CAAC,CAAC,UAAD,CAAD,CAAvC;AAEA,OAAO,SAASU,cAAT,CAAwBC,KAAxB,EAA+BC,QAA/B,EAAwC;AAE9C,MAAIC,OAAO,GAAG,IAAIZ,YAAJ,EAAd;AACAY,EAAAA,OAAO,CAACC,cAAR,CAAuBH,KAAvB;AAEAL,EAAAA,YAAY,CAACS,KAAb,CAAmBF,OAAnB,EAA4B,EAA5B,EAAgC,UAASG,GAAT,EAAcC,QAAd,EAAwB;AACtD,QAAGD,GAAH,EAAO;AACNE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA;AACA;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,WAAT,EAAZ;AACAX,IAAAA,SAAS,CAAC,UAAD,EAAaQ,QAAQ,CAACG,WAAT,EAAb,EAAqC;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE,IAArB;AAA2BC,MAAAA,QAAQ,EAAE,IAArC;AAA2CC,MAAAA,QAAQ,EAAC;AAApD,KAArC,CAAT;AACAZ,IAAAA,QAAQ;AACT,GATD;AAUA;AAED,OAAO,SAASa,UAAT,GAAqB;AAE3B,MAAIZ,OAAO,GAAG,IAAIT,aAAJ,EAAd;AAEAG,EAAAA,aAAa,CAACkB,UAAd,CAAyBZ,OAAzB,EAAkC;AAAC,gBAAWa;AAAZ,GAAlC,EAAyD,UAASV,GAAT,EAAcC,QAAd,EAAwB;AAC/E;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACU,cAAT,GAA0BC,SAA1B,EAAZ;AACD,GAJD;AAKA;AAED,OAAO,IAAIF,QAAJ","sourcesContent":["import { useCookies } from 'react-cookie';\nconst {LoginRequest} = require('./generated/proto/login_pb');\nconst {LoginClient} = require('./generated/proto/login_grpc_web_pb');\n\nconst {SampleRequest} = require('./generated/proto/sample_pb');\nconst {SampleClient} = require('./generated/proto/sample_grpc_web_pb');\n\nvar loginService = new LoginClient('http://localhost:8080',null,null);\nvar sampleService = new SampleClient('http://localhost:8080',null,null);\n\nconst [cookies, setCookie] = useCookies(['jwtToken']);\n\nexport function loginWithToken(token, callback){\n\n\tvar request = new LoginRequest();\n\trequest.setGoogleToken(token);\n\n\tloginService.login(request, {}, function(err, response) {\n\t  if(err){\n\t  \tconsole.log(err)\n\t  \treturn\n\t  }\n\t  console.log(\"done login\")\n\t  console.log(response.getJwtToken())\n\t  setCookie('jwtToken', response.getJwtToken(), { path: '/', secure: true, httpOnly: true, sameSite:true });\n\t  callback()\n\t});\n}\n\nexport function sampleCall(){\n\n\tvar request = new SampleRequest();\n\n\tsampleService.sampleCall(request, {'JWTTOKEN':jwtToken}, function(err, response) {\n\t  // ...\n\t  console.log(\"done sampleCall\")\n\t  console.log(response.getUserdetails().getUserId())\n\t});\n}\n\nexport var jwtToken;"]},"metadata":{},"sourceType":"module"}