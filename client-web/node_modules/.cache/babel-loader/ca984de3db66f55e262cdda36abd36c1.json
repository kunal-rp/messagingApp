{"ast":null,"code":"// source: proto/sample.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\nvar proto = {\n  sample: {}\n};\nvar COMPILED;\ngoog.exportSymbol('proto.sample.SampleRequest', null, global);\ngoog.exportSymbol('proto.sample.SampleResponse', null, global);\ngoog.exportSymbol('proto.sample.UserDetails', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.sample.SampleRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.sample.SampleRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.sample.SampleRequest.displayName = 'proto.sample.SampleRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.sample.SampleResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.sample.SampleResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.sample.SampleResponse.displayName = 'proto.sample.SampleResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.sample.UserDetails = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.sample.UserDetails, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.sample.UserDetails.displayName = 'proto.sample.UserDetails';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.sample.SampleRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.sample.SampleRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.sample.SampleRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.sample.SampleRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sample.SampleRequest}\n */\n\n\nproto.sample.SampleRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sample.SampleRequest();\n  return proto.sample.SampleRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sample.SampleRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sample.SampleRequest}\n */\n\n\nproto.sample.SampleRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.sample.SampleRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.sample.SampleRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.sample.SampleRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.sample.SampleRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.sample.SampleResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.sample.SampleResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.sample.SampleResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.sample.SampleResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      userdetails: (f = msg.getUserdetails()) && proto.sample.UserDetails.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sample.SampleResponse}\n */\n\n\nproto.sample.SampleResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sample.SampleResponse();\n  return proto.sample.SampleResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sample.SampleResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sample.SampleResponse}\n */\n\n\nproto.sample.SampleResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.sample.UserDetails();\n        reader.readMessage(value, proto.sample.UserDetails.deserializeBinaryFromReader);\n        msg.setUserdetails(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.sample.SampleResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.sample.SampleResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.sample.SampleResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.sample.SampleResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUserdetails();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.sample.UserDetails.serializeBinaryToWriter);\n  }\n};\n/**\n * optional UserDetails userDetails = 1;\n * @return {?proto.sample.UserDetails}\n */\n\n\nproto.sample.SampleResponse.prototype.getUserdetails = function () {\n  return (\n    /** @type{?proto.sample.UserDetails} */\n    jspb.Message.getWrapperField(this, proto.sample.UserDetails, 1)\n  );\n};\n/**\n * @param {?proto.sample.UserDetails|undefined} value\n * @return {!proto.sample.SampleResponse} returns this\n*/\n\n\nproto.sample.SampleResponse.prototype.setUserdetails = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.sample.SampleResponse} returns this\n */\n\n\nproto.sample.SampleResponse.prototype.clearUserdetails = function () {\n  return this.setUserdetails(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.sample.SampleResponse.prototype.hasUserdetails = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.sample.UserDetails.prototype.toObject = function (opt_includeInstance) {\n    return proto.sample.UserDetails.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.sample.UserDetails} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.sample.UserDetails.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sample.UserDetails}\n */\n\n\nproto.sample.UserDetails.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sample.UserDetails();\n  return proto.sample.UserDetails.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sample.UserDetails} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sample.UserDetails}\n */\n\n\nproto.sample.UserDetails.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUserId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.sample.UserDetails.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.sample.UserDetails.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.sample.UserDetails} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.sample.UserDetails.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * required string user_id = 1;\n * @return {string}\n */\n\n\nproto.sample.UserDetails.prototype.getUserId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.sample.UserDetails} returns this\n */\n\n\nproto.sample.UserDetails.prototype.setUserId = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.sample.UserDetails} returns this\n */\n\n\nproto.sample.UserDetails.prototype.clearUserId = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.sample.UserDetails.prototype.hasUserId = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\ngoog.object.extend(exports, proto.sample);","map":{"version":3,"sources":["/Users/kunal/Desktop/Coding/messageingApp/client-web/src/generated/proto/sample_pb.js"],"names":["jspb","require","goog","global","Function","proto","sample","COMPILED","exportSymbol","SampleRequest","opt_data","Message","initialize","inherits","DEBUG","displayName","SampleResponse","UserDetails","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","userdetails","getUserdetails","value","readMessage","setUserdetails","writeMessage","getWrapperField","setWrapperField","clearUserdetails","hasUserdetails","getField","userId","readString","setUserId","writeString","getUserId","getFieldWithDefault","setField","clearUserId","hasUserId","object","extend","exports"],"mappings":"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","sourcesContent":["// source: proto/sample.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\n\nvar proto = {\n  sample:{}\n};\nvar COMPILED;\n\ngoog.exportSymbol('proto.sample.SampleRequest', null, global);\ngoog.exportSymbol('proto.sample.SampleResponse', null, global);\ngoog.exportSymbol('proto.sample.UserDetails', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sample.SampleRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sample.SampleRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.sample.SampleRequest.displayName = 'proto.sample.SampleRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sample.SampleResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sample.SampleResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.sample.SampleResponse.displayName = 'proto.sample.SampleResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sample.UserDetails = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sample.UserDetails, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.sample.UserDetails.displayName = 'proto.sample.UserDetails';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sample.SampleRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.sample.SampleRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sample.SampleRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.sample.SampleRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sample.SampleRequest}\n */\nproto.sample.SampleRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sample.SampleRequest;\n  return proto.sample.SampleRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sample.SampleRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sample.SampleRequest}\n */\nproto.sample.SampleRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sample.SampleRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.sample.SampleRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.sample.SampleRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.sample.SampleRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sample.SampleResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.sample.SampleResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sample.SampleResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.sample.SampleResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userdetails: (f = msg.getUserdetails()) && proto.sample.UserDetails.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sample.SampleResponse}\n */\nproto.sample.SampleResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sample.SampleResponse;\n  return proto.sample.SampleResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sample.SampleResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sample.SampleResponse}\n */\nproto.sample.SampleResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.sample.UserDetails;\n      reader.readMessage(value,proto.sample.UserDetails.deserializeBinaryFromReader);\n      msg.setUserdetails(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sample.SampleResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.sample.SampleResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.sample.SampleResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.sample.SampleResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserdetails();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.sample.UserDetails.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional UserDetails userDetails = 1;\n * @return {?proto.sample.UserDetails}\n */\nproto.sample.SampleResponse.prototype.getUserdetails = function() {\n  return /** @type{?proto.sample.UserDetails} */ (\n    jspb.Message.getWrapperField(this, proto.sample.UserDetails, 1));\n};\n\n\n/**\n * @param {?proto.sample.UserDetails|undefined} value\n * @return {!proto.sample.SampleResponse} returns this\n*/\nproto.sample.SampleResponse.prototype.setUserdetails = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.sample.SampleResponse} returns this\n */\nproto.sample.SampleResponse.prototype.clearUserdetails = function() {\n  return this.setUserdetails(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.sample.SampleResponse.prototype.hasUserdetails = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sample.UserDetails.prototype.toObject = function(opt_includeInstance) {\n  return proto.sample.UserDetails.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sample.UserDetails} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.sample.UserDetails.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sample.UserDetails}\n */\nproto.sample.UserDetails.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sample.UserDetails;\n  return proto.sample.UserDetails.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sample.UserDetails} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sample.UserDetails}\n */\nproto.sample.UserDetails.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sample.UserDetails.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.sample.UserDetails.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.sample.UserDetails} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.sample.UserDetails.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required string user_id = 1;\n * @return {string}\n */\nproto.sample.UserDetails.prototype.getUserId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.sample.UserDetails} returns this\n */\nproto.sample.UserDetails.prototype.setUserId = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.sample.UserDetails} returns this\n */\nproto.sample.UserDetails.prototype.clearUserId = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.sample.UserDetails.prototype.hasUserId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\ngoog.object.extend(exports, proto.sample);\n"]},"metadata":{},"sourceType":"module"}