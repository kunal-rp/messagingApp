{"ast":null,"code":"const {\n  LoginRequest\n} = require('./generated/proto/login_pb');\n\nconst {\n  LoginClient\n} = require('./generated/proto/login_grpc_web_pb');\n\nconst {\n  SampleRequest\n} = require('./generated/proto/sample_pb');\n\nconst {\n  SampleClient\n} = require('./generated/proto/sample_grpc_web_pb');\n\nvar loginService = new LoginClient('http://localhost:8080', null, null);\nvar sampleService = new SampleClient('http://localhost:8080', null, null);\nvar jwtToken;\nexport function loginWithToken(token) {\n  var request = new LoginRequest();\n  request.setGoogleToken(token);\n  loginService.login(request, {}, function (err, response) {\n    // ...\n    console.log(\"done login\");\n    console.log(response.getJwtToken());\n    jwtToken = response.getJwtToken();\n  });\n}\nexport function sampleCall() {\n  var request = new SampleRequest();\n  sampleService.sampleCall(request, {\n    'Authorization': jwtToken\n  }, function (err, response) {\n    // ...\n    console.log(\"done sampleCall\");\n    console.log(response.getJwtToken());\n  });\n}","map":{"version":3,"sources":["/Users/kunal/Desktop/Coding/messageingApp/client-web/src/client.js"],"names":["LoginRequest","require","LoginClient","SampleRequest","SampleClient","loginService","sampleService","jwtToken","loginWithToken","token","request","setGoogleToken","login","err","response","console","log","getJwtToken","sampleCall"],"mappings":"AAAA,MAAM;AAACA,EAAAA;AAAD,IAAiBC,OAAO,CAAC,4BAAD,CAA9B;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAgBD,OAAO,CAAC,qCAAD,CAA7B;;AAEA,MAAM;AAACE,EAAAA;AAAD,IAAkBF,OAAO,CAAC,6BAAD,CAA/B;;AACA,MAAM;AAACG,EAAAA;AAAD,IAAiBH,OAAO,CAAC,sCAAD,CAA9B;;AAEA,IAAII,YAAY,GAAG,IAAIH,WAAJ,CAAgB,uBAAhB,EAAwC,IAAxC,EAA6C,IAA7C,CAAnB;AACA,IAAII,aAAa,GAAG,IAAIF,YAAJ,CAAiB,uBAAjB,EAAyC,IAAzC,EAA8C,IAA9C,CAApB;AAEA,IAAIG,QAAJ;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAEpC,MAAIC,OAAO,GAAG,IAAIV,YAAJ,EAAd;AACAU,EAAAA,OAAO,CAACC,cAAR,CAAuBF,KAAvB;AAEAJ,EAAAA,YAAY,CAACO,KAAb,CAAmBF,OAAnB,EAA4B,EAA5B,EAAgC,UAASG,GAAT,EAAcC,QAAd,EAAwB;AACtD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,WAAT,EAAZ;AACAV,IAAAA,QAAQ,GAAGO,QAAQ,CAACG,WAAT,EAAX;AACD,GALD;AAMA;AAED,OAAO,SAASC,UAAT,GAAqB;AAE3B,MAAIR,OAAO,GAAG,IAAIP,aAAJ,EAAd;AAEAG,EAAAA,aAAa,CAACY,UAAd,CAAyBR,OAAzB,EAAkC;AAAC,qBAAgBH;AAAjB,GAAlC,EAA8D,UAASM,GAAT,EAAcC,QAAd,EAAwB;AACpF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,WAAT,EAAZ;AACD,GAJD;AAKA","sourcesContent":["const {LoginRequest} = require('./generated/proto/login_pb');\nconst {LoginClient} = require('./generated/proto/login_grpc_web_pb');\n\nconst {SampleRequest} = require('./generated/proto/sample_pb');\nconst {SampleClient} = require('./generated/proto/sample_grpc_web_pb');\n\nvar loginService = new LoginClient('http://localhost:8080',null,null);\nvar sampleService = new SampleClient('http://localhost:8080',null,null);\n\nvar jwtToken;\n\nexport function loginWithToken(token){\n\n\tvar request = new LoginRequest();\n\trequest.setGoogleToken(token);\n\n\tloginService.login(request, {}, function(err, response) {\n\t  // ...\n\t  console.log(\"done login\")\n\t  console.log(response.getJwtToken())\n\t  jwtToken = response.getJwtToken();\n\t});\n}\n\nexport function sampleCall(){\n\n\tvar request = new SampleRequest();\n\n\tsampleService.sampleCall(request, {'Authorization':jwtToken}, function(err, response) {\n\t  // ...\n\t  console.log(\"done sampleCall\")\n\t  console.log(response.getJwtToken())\n\t});\n}"]},"metadata":{},"sourceType":"module"}