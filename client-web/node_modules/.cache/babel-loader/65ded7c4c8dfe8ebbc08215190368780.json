{"ast":null,"code":"/*eslint-disabled */\n// @ts-nocheck\n// source: proto/userhandler.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.userhandler.LoginRequest', null, global);\ngoog.exportSymbol('proto.userhandler.LoginRequest.TokenCase', null, global);\ngoog.exportSymbol('proto.userhandler.LoginResponse', null, global);\ngoog.exportSymbol('proto.userhandler.LoginResponse.Result', null, global);\ngoog.exportSymbol('proto.userhandler.Permissions', null, global);\ngoog.exportSymbol('proto.userhandler.User', null, global);\ngoog.exportSymbol('proto.userhandler.UserDetails', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.userhandler.LoginRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.userhandler.LoginRequest.oneofGroups_);\n};\n\ngoog.inherits(proto.userhandler.LoginRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.userhandler.LoginRequest.displayName = 'proto.userhandler.LoginRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.userhandler.LoginResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.userhandler.LoginResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.userhandler.LoginResponse.displayName = 'proto.userhandler.LoginResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.userhandler.User = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.userhandler.User, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.userhandler.User.displayName = 'proto.userhandler.User';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.userhandler.UserDetails = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.userhandler.UserDetails, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.userhandler.UserDetails.displayName = 'proto.userhandler.UserDetails';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.userhandler.Permissions = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.userhandler.Permissions, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.userhandler.Permissions.displayName = 'proto.userhandler.Permissions';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.userhandler.LoginRequest.oneofGroups_ = [[1]];\n/**\n * @enum {number}\n */\n\nproto.userhandler.LoginRequest.TokenCase = {\n  TOKEN_NOT_SET: 0,\n  GOOGLE_TOKEN: 1\n};\n/**\n * @return {proto.userhandler.LoginRequest.TokenCase}\n */\n\nproto.userhandler.LoginRequest.prototype.getTokenCase = function () {\n  return (\n    /** @type {proto.userhandler.LoginRequest.TokenCase} */\n    jspb.Message.computeOneofCase(this, proto.userhandler.LoginRequest.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.userhandler.LoginRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.userhandler.LoginRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.userhandler.LoginRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.userhandler.LoginRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      googleToken: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userhandler.LoginRequest}\n */\n\n\nproto.userhandler.LoginRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userhandler.LoginRequest();\n  return proto.userhandler.LoginRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userhandler.LoginRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userhandler.LoginRequest}\n */\n\n\nproto.userhandler.LoginRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setGoogleToken(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.userhandler.LoginRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.userhandler.LoginRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.userhandler.LoginRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.userhandler.LoginRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string google_token = 1;\n * @return {string}\n */\n\n\nproto.userhandler.LoginRequest.prototype.getGoogleToken = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.userhandler.LoginRequest} returns this\n */\n\n\nproto.userhandler.LoginRequest.prototype.setGoogleToken = function (value) {\n  return jspb.Message.setOneofField(this, 1, proto.userhandler.LoginRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.LoginRequest} returns this\n */\n\n\nproto.userhandler.LoginRequest.prototype.clearGoogleToken = function () {\n  return jspb.Message.setOneofField(this, 1, proto.userhandler.LoginRequest.oneofGroups_[0], undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.userhandler.LoginRequest.prototype.hasGoogleToken = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.userhandler.LoginResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.userhandler.LoginResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.userhandler.LoginResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.userhandler.LoginResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      loginResult: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      jwtToken: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userhandler.LoginResponse}\n */\n\n\nproto.userhandler.LoginResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userhandler.LoginResponse();\n  return proto.userhandler.LoginResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userhandler.LoginResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userhandler.LoginResponse}\n */\n\n\nproto.userhandler.LoginResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.userhandler.LoginResponse.Result} */\n        reader.readEnum();\n        msg.setLoginResult(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setJwtToken(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.userhandler.LoginResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.userhandler.LoginResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.userhandler.LoginResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.userhandler.LoginResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!proto.userhandler.LoginResponse.Result} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.userhandler.LoginResponse.Result = {\n  SUCSESS: 0,\n  FAIL: 1\n};\n/**\n * required Result login_result = 1;\n * @return {!proto.userhandler.LoginResponse.Result}\n */\n\nproto.userhandler.LoginResponse.prototype.getLoginResult = function () {\n  return (\n    /** @type {!proto.userhandler.LoginResponse.Result} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {!proto.userhandler.LoginResponse.Result} value\n * @return {!proto.userhandler.LoginResponse} returns this\n */\n\n\nproto.userhandler.LoginResponse.prototype.setLoginResult = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.LoginResponse} returns this\n */\n\n\nproto.userhandler.LoginResponse.prototype.clearLoginResult = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.userhandler.LoginResponse.prototype.hasLoginResult = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string jwt_token = 2;\n * @return {string}\n */\n\n\nproto.userhandler.LoginResponse.prototype.getJwtToken = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.userhandler.LoginResponse} returns this\n */\n\n\nproto.userhandler.LoginResponse.prototype.setJwtToken = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.LoginResponse} returns this\n */\n\n\nproto.userhandler.LoginResponse.prototype.clearJwtToken = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.userhandler.LoginResponse.prototype.hasJwtToken = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.userhandler.User.prototype.toObject = function (opt_includeInstance) {\n    return proto.userhandler.User.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.userhandler.User} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.userhandler.User.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      email: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      profileImageUrl: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userhandler.User}\n */\n\n\nproto.userhandler.User.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userhandler.User();\n  return proto.userhandler.User.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userhandler.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userhandler.User}\n */\n\n\nproto.userhandler.User.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setUserId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProfileImageUrl(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.userhandler.User.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.userhandler.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.userhandler.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.userhandler.User.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeInt32(1, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * required int32 user_id = 1;\n * @return {number}\n */\n\n\nproto.userhandler.User.prototype.getUserId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.userhandler.User} returns this\n */\n\n\nproto.userhandler.User.prototype.setUserId = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.User} returns this\n */\n\n\nproto.userhandler.User.prototype.clearUserId = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.userhandler.User.prototype.hasUserId = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required string email = 2;\n * @return {string}\n */\n\n\nproto.userhandler.User.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.userhandler.User} returns this\n */\n\n\nproto.userhandler.User.prototype.setEmail = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.User} returns this\n */\n\n\nproto.userhandler.User.prototype.clearEmail = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.userhandler.User.prototype.hasEmail = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string profile_image_url = 3;\n * @return {string}\n */\n\n\nproto.userhandler.User.prototype.getProfileImageUrl = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.userhandler.User} returns this\n */\n\n\nproto.userhandler.User.prototype.setProfileImageUrl = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.User} returns this\n */\n\n\nproto.userhandler.User.prototype.clearProfileImageUrl = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.userhandler.User.prototype.hasProfileImageUrl = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.userhandler.UserDetails.prototype.toObject = function (opt_includeInstance) {\n    return proto.userhandler.UserDetails.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.userhandler.UserDetails} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.userhandler.UserDetails.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      userPermissions: (f = msg.getUserPermissions()) && proto.userhandler.Permissions.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userhandler.UserDetails}\n */\n\n\nproto.userhandler.UserDetails.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userhandler.UserDetails();\n  return proto.userhandler.UserDetails.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userhandler.UserDetails} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userhandler.UserDetails}\n */\n\n\nproto.userhandler.UserDetails.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setUserId(value);\n        break;\n\n      case 2:\n        var value = new proto.userhandler.Permissions();\n        reader.readMessage(value, proto.userhandler.Permissions.deserializeBinaryFromReader);\n        msg.setUserPermissions(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.userhandler.UserDetails.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.userhandler.UserDetails.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.userhandler.UserDetails} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.userhandler.UserDetails.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getUserPermissions();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.userhandler.Permissions.serializeBinaryToWriter);\n  }\n};\n/**\n * required int32 user_id = 1;\n * @return {number}\n */\n\n\nproto.userhandler.UserDetails.prototype.getUserId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.userhandler.UserDetails} returns this\n */\n\n\nproto.userhandler.UserDetails.prototype.setUserId = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.UserDetails} returns this\n */\n\n\nproto.userhandler.UserDetails.prototype.clearUserId = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.userhandler.UserDetails.prototype.hasUserId = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Permissions user_permissions = 2;\n * @return {?proto.userhandler.Permissions}\n */\n\n\nproto.userhandler.UserDetails.prototype.getUserPermissions = function () {\n  return (\n    /** @type{?proto.userhandler.Permissions} */\n    jspb.Message.getWrapperField(this, proto.userhandler.Permissions, 2)\n  );\n};\n/**\n * @param {?proto.userhandler.Permissions|undefined} value\n * @return {!proto.userhandler.UserDetails} returns this\n*/\n\n\nproto.userhandler.UserDetails.prototype.setUserPermissions = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.userhandler.UserDetails} returns this\n */\n\n\nproto.userhandler.UserDetails.prototype.clearUserPermissions = function () {\n  return this.setUserPermissions(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.userhandler.UserDetails.prototype.hasUserPermissions = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.userhandler.Permissions.prototype.toObject = function (opt_includeInstance) {\n    return proto.userhandler.Permissions.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.userhandler.Permissions} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.userhandler.Permissions.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userhandler.Permissions}\n */\n\n\nproto.userhandler.Permissions.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userhandler.Permissions();\n  return proto.userhandler.Permissions.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userhandler.Permissions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userhandler.Permissions}\n */\n\n\nproto.userhandler.Permissions.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.userhandler.Permissions.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.userhandler.Permissions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.userhandler.Permissions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.userhandler.Permissions.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\ngoog.object.extend(exports, proto.userhandler);","map":{"version":3,"sources":["/Users/kunal/Desktop/Coding/messageingApp/client-web/src/generated/proto/userhandler_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","userhandler","LoginRequest","opt_data","Message","initialize","oneofGroups_","inherits","DEBUG","COMPILED","displayName","LoginResponse","User","UserDetails","Permissions","TokenCase","TOKEN_NOT_SET","GOOGLE_TOKEN","prototype","getTokenCase","computeOneofCase","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","f","obj","googleToken","getField","undefined","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setGoogleToken","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","writeString","getGoogleToken","getFieldWithDefault","setOneofField","clearGoogleToken","hasGoogleToken","loginResult","jwtToken","readEnum","setLoginResult","setJwtToken","writeEnum","Result","SUCSESS","FAIL","getLoginResult","setField","clearLoginResult","hasLoginResult","getJwtToken","clearJwtToken","hasJwtToken","userId","email","profileImageUrl","readInt32","setUserId","setEmail","setProfileImageUrl","writeInt32","getUserId","clearUserId","hasUserId","getEmail","clearEmail","hasEmail","getProfileImageUrl","clearProfileImageUrl","hasProfileImageUrl","userPermissions","getUserPermissions","readMessage","setUserPermissions","writeMessage","getWrapperField","setWrapperField","clearUserPermissions","hasUserPermissions","object","extend","exports"],"mappings":"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","sourcesContent":["/*eslint-disabled */\n// @ts-nocheck\n\n// source: proto/userhandler.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.userhandler.LoginRequest', null, global);\ngoog.exportSymbol('proto.userhandler.LoginRequest.TokenCase', null, global);\ngoog.exportSymbol('proto.userhandler.LoginResponse', null, global);\ngoog.exportSymbol('proto.userhandler.LoginResponse.Result', null, global);\ngoog.exportSymbol('proto.userhandler.Permissions', null, global);\ngoog.exportSymbol('proto.userhandler.User', null, global);\ngoog.exportSymbol('proto.userhandler.UserDetails', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userhandler.LoginRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.userhandler.LoginRequest.oneofGroups_);\n};\ngoog.inherits(proto.userhandler.LoginRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.userhandler.LoginRequest.displayName = 'proto.userhandler.LoginRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userhandler.LoginResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userhandler.LoginResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.userhandler.LoginResponse.displayName = 'proto.userhandler.LoginResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userhandler.User = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userhandler.User, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.userhandler.User.displayName = 'proto.userhandler.User';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userhandler.UserDetails = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userhandler.UserDetails, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.userhandler.UserDetails.displayName = 'proto.userhandler.UserDetails';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userhandler.Permissions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userhandler.Permissions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.userhandler.Permissions.displayName = 'proto.userhandler.Permissions';\n}\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.userhandler.LoginRequest.oneofGroups_ = [[1]];\n\n/**\n * @enum {number}\n */\nproto.userhandler.LoginRequest.TokenCase = {\n  TOKEN_NOT_SET: 0,\n  GOOGLE_TOKEN: 1\n};\n\n/**\n * @return {proto.userhandler.LoginRequest.TokenCase}\n */\nproto.userhandler.LoginRequest.prototype.getTokenCase = function() {\n  return /** @type {proto.userhandler.LoginRequest.TokenCase} */(jspb.Message.computeOneofCase(this, proto.userhandler.LoginRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userhandler.LoginRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.userhandler.LoginRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userhandler.LoginRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.userhandler.LoginRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    googleToken: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userhandler.LoginRequest}\n */\nproto.userhandler.LoginRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userhandler.LoginRequest;\n  return proto.userhandler.LoginRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userhandler.LoginRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userhandler.LoginRequest}\n */\nproto.userhandler.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGoogleToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userhandler.LoginRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.userhandler.LoginRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.userhandler.LoginRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.userhandler.LoginRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string google_token = 1;\n * @return {string}\n */\nproto.userhandler.LoginRequest.prototype.getGoogleToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.userhandler.LoginRequest} returns this\n */\nproto.userhandler.LoginRequest.prototype.setGoogleToken = function(value) {\n  return jspb.Message.setOneofField(this, 1, proto.userhandler.LoginRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.LoginRequest} returns this\n */\nproto.userhandler.LoginRequest.prototype.clearGoogleToken = function() {\n  return jspb.Message.setOneofField(this, 1, proto.userhandler.LoginRequest.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.userhandler.LoginRequest.prototype.hasGoogleToken = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userhandler.LoginResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.userhandler.LoginResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userhandler.LoginResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.userhandler.LoginResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    loginResult: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    jwtToken: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userhandler.LoginResponse}\n */\nproto.userhandler.LoginResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userhandler.LoginResponse;\n  return proto.userhandler.LoginResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userhandler.LoginResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userhandler.LoginResponse}\n */\nproto.userhandler.LoginResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.userhandler.LoginResponse.Result} */ (reader.readEnum());\n      msg.setLoginResult(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJwtToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userhandler.LoginResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.userhandler.LoginResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.userhandler.LoginResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.userhandler.LoginResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.userhandler.LoginResponse.Result} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.userhandler.LoginResponse.Result = {\n  SUCSESS: 0,\n  FAIL: 1\n};\n\n/**\n * required Result login_result = 1;\n * @return {!proto.userhandler.LoginResponse.Result}\n */\nproto.userhandler.LoginResponse.prototype.getLoginResult = function() {\n  return /** @type {!proto.userhandler.LoginResponse.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.userhandler.LoginResponse.Result} value\n * @return {!proto.userhandler.LoginResponse} returns this\n */\nproto.userhandler.LoginResponse.prototype.setLoginResult = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.LoginResponse} returns this\n */\nproto.userhandler.LoginResponse.prototype.clearLoginResult = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.userhandler.LoginResponse.prototype.hasLoginResult = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string jwt_token = 2;\n * @return {string}\n */\nproto.userhandler.LoginResponse.prototype.getJwtToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.userhandler.LoginResponse} returns this\n */\nproto.userhandler.LoginResponse.prototype.setJwtToken = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.LoginResponse} returns this\n */\nproto.userhandler.LoginResponse.prototype.clearJwtToken = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.userhandler.LoginResponse.prototype.hasJwtToken = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userhandler.User.prototype.toObject = function(opt_includeInstance) {\n  return proto.userhandler.User.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userhandler.User} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.userhandler.User.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    email: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    profileImageUrl: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userhandler.User}\n */\nproto.userhandler.User.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userhandler.User;\n  return proto.userhandler.User.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userhandler.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userhandler.User}\n */\nproto.userhandler.User.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setUserId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileImageUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userhandler.User.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.userhandler.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.userhandler.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.userhandler.User.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * required int32 user_id = 1;\n * @return {number}\n */\nproto.userhandler.User.prototype.getUserId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.userhandler.User} returns this\n */\nproto.userhandler.User.prototype.setUserId = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.User} returns this\n */\nproto.userhandler.User.prototype.clearUserId = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.userhandler.User.prototype.hasUserId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required string email = 2;\n * @return {string}\n */\nproto.userhandler.User.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.userhandler.User} returns this\n */\nproto.userhandler.User.prototype.setEmail = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.User} returns this\n */\nproto.userhandler.User.prototype.clearEmail = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.userhandler.User.prototype.hasEmail = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string profile_image_url = 3;\n * @return {string}\n */\nproto.userhandler.User.prototype.getProfileImageUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.userhandler.User} returns this\n */\nproto.userhandler.User.prototype.setProfileImageUrl = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.User} returns this\n */\nproto.userhandler.User.prototype.clearProfileImageUrl = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.userhandler.User.prototype.hasProfileImageUrl = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userhandler.UserDetails.prototype.toObject = function(opt_includeInstance) {\n  return proto.userhandler.UserDetails.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userhandler.UserDetails} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.userhandler.UserDetails.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    userPermissions: (f = msg.getUserPermissions()) && proto.userhandler.Permissions.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userhandler.UserDetails}\n */\nproto.userhandler.UserDetails.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userhandler.UserDetails;\n  return proto.userhandler.UserDetails.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userhandler.UserDetails} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userhandler.UserDetails}\n */\nproto.userhandler.UserDetails.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setUserId(value);\n      break;\n    case 2:\n      var value = new proto.userhandler.Permissions;\n      reader.readMessage(value,proto.userhandler.Permissions.deserializeBinaryFromReader);\n      msg.setUserPermissions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userhandler.UserDetails.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.userhandler.UserDetails.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.userhandler.UserDetails} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.userhandler.UserDetails.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getUserPermissions();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.userhandler.Permissions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * required int32 user_id = 1;\n * @return {number}\n */\nproto.userhandler.UserDetails.prototype.getUserId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.userhandler.UserDetails} returns this\n */\nproto.userhandler.UserDetails.prototype.setUserId = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.userhandler.UserDetails} returns this\n */\nproto.userhandler.UserDetails.prototype.clearUserId = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.userhandler.UserDetails.prototype.hasUserId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Permissions user_permissions = 2;\n * @return {?proto.userhandler.Permissions}\n */\nproto.userhandler.UserDetails.prototype.getUserPermissions = function() {\n  return /** @type{?proto.userhandler.Permissions} */ (\n    jspb.Message.getWrapperField(this, proto.userhandler.Permissions, 2));\n};\n\n\n/**\n * @param {?proto.userhandler.Permissions|undefined} value\n * @return {!proto.userhandler.UserDetails} returns this\n*/\nproto.userhandler.UserDetails.prototype.setUserPermissions = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.userhandler.UserDetails} returns this\n */\nproto.userhandler.UserDetails.prototype.clearUserPermissions = function() {\n  return this.setUserPermissions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.userhandler.UserDetails.prototype.hasUserPermissions = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userhandler.Permissions.prototype.toObject = function(opt_includeInstance) {\n  return proto.userhandler.Permissions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userhandler.Permissions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.userhandler.Permissions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userhandler.Permissions}\n */\nproto.userhandler.Permissions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userhandler.Permissions;\n  return proto.userhandler.Permissions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userhandler.Permissions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userhandler.Permissions}\n */\nproto.userhandler.Permissions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userhandler.Permissions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.userhandler.Permissions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.userhandler.Permissions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.userhandler.Permissions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.userhandler);\n"]},"metadata":{},"sourceType":"module"}