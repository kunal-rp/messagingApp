{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for login\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nconst grpc = {};\ngrpc.web = require('grpc-web');\nconst proto = {};\nproto.login = require('./login_pb.js');\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\nproto.login.LoginClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.login.LoginPromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.login.LoginRequest,\n *   !proto.login.LoginResponse>}\n */\n\n\nconst methodDescriptor_Login_login = new grpc.web.MethodDescriptor('/login.Login/login', grpc.web.MethodType.UNARY, proto.login.LoginRequest, proto.login.LoginResponse,\n/**\n * @param {!proto.login.LoginRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.login.LoginResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.login.LoginRequest,\n *   !proto.login.LoginResponse>}\n */\n\nconst methodInfo_Login_login = new grpc.web.AbstractClientBase.MethodInfo(proto.login.LoginResponse,\n/**\n * @param {!proto.login.LoginRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.login.LoginResponse.deserializeBinary);\n/**\n * @param {!proto.login.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.login.LoginResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.login.LoginResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.login.LoginClient.prototype.login = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/login.Login/login', request, metadata || {}, methodDescriptor_Login_login, callback);\n};\n/**\n * @param {!proto.login.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.login.LoginResponse>}\n *     A native promise that resolves to the response\n */\n\n\nproto.login.LoginPromiseClient.prototype.login = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/login.Login/login', request, metadata || {}, methodDescriptor_Login_login);\n};\n\nmodule.exports = proto.login;","map":{"version":3,"sources":["/Users/kunal/Desktop/Coding/messageingApp/client-web/src/generated/proto/login_grpc_web_pb.js"],"names":["grpc","web","require","proto","login","LoginClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","LoginPromiseClient","methodDescriptor_Login_login","MethodDescriptor","MethodType","UNARY","LoginRequest","LoginResponse","request","serializeBinary","deserializeBinary","methodInfo_Login_login","AbstractClientBase","MethodInfo","prototype","metadata","callback","rpcCall","unaryCall","module","exports"],"mappings":"AAAA;;;;;AAMA;AAIA,MAAMA,IAAI,GAAG,EAAb;AACAA,IAAI,CAACC,GAAL,GAAWC,OAAO,CAAC,UAAD,CAAlB;AAEA,MAAMC,KAAK,GAAG,EAAd;AACAA,KAAK,CAACC,KAAN,GAAcF,OAAO,CAAC,eAAD,CAArB;AAEA;;;;;;;;;AAQAC,KAAK,CAACC,KAAN,CAAYC,WAAZ,GACI,UAASC,QAAT,EAAmBC,WAAnB,EAAgCC,OAAhC,EAAyC;AAC3C,MAAI,CAACA,OAAL,EAAcA,OAAO,GAAG,EAAV;AACdA,EAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,MAApB;AAEA;;;;AAGA,OAAKC,OAAL,GAAe,IAAIT,IAAI,CAACC,GAAL,CAASS,iBAAb,CAA+BF,OAA/B,CAAf;AAEA;;;;AAGA,OAAKG,SAAL,GAAiBL,QAAjB;AAED,CAfD;AAkBA;;;;;;;;;;AAQAH,KAAK,CAACC,KAAN,CAAYQ,kBAAZ,GACI,UAASN,QAAT,EAAmBC,WAAnB,EAAgCC,OAAhC,EAAyC;AAC3C,MAAI,CAACA,OAAL,EAAcA,OAAO,GAAG,EAAV;AACdA,EAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,MAApB;AAEA;;;;AAGA,OAAKC,OAAL,GAAe,IAAIT,IAAI,CAACC,GAAL,CAASS,iBAAb,CAA+BF,OAA/B,CAAf;AAEA;;;;AAGA,OAAKG,SAAL,GAAiBL,QAAjB;AAED,CAfD;AAkBA;;;;;;;;AAMA,MAAMO,4BAA4B,GAAG,IAAIb,IAAI,CAACC,GAAL,CAASa,gBAAb,CACnC,oBADmC,EAEnCd,IAAI,CAACC,GAAL,CAASc,UAAT,CAAoBC,KAFe,EAGnCb,KAAK,CAACC,KAAN,CAAYa,YAHuB,EAInCd,KAAK,CAACC,KAAN,CAAYc,aAJuB;AAKnC;;;;AAIA,UAASC,OAAT,EAAkB;AAChB,SAAOA,OAAO,CAACC,eAAR,EAAP;AACD,CAXkC,EAYnCjB,KAAK,CAACC,KAAN,CAAYc,aAAZ,CAA0BG,iBAZS,CAArC;AAgBA;;;;;;;AAMA,MAAMC,sBAAsB,GAAG,IAAItB,IAAI,CAACC,GAAL,CAASsB,kBAAT,CAA4BC,UAAhC,CAC7BrB,KAAK,CAACC,KAAN,CAAYc,aADiB;AAE7B;;;;AAIA,UAASC,OAAT,EAAkB;AAChB,SAAOA,OAAO,CAACC,eAAR,EAAP;AACD,CAR4B,EAS7BjB,KAAK,CAACC,KAAN,CAAYc,aAAZ,CAA0BG,iBATG,CAA/B;AAaA;;;;;;;;;;;AAUAlB,KAAK,CAACC,KAAN,CAAYC,WAAZ,CAAwBoB,SAAxB,CAAkCrB,KAAlC,GACI,UAASe,OAAT,EAAkBO,QAAlB,EAA4BC,QAA5B,EAAsC;AACxC,SAAO,KAAKlB,OAAL,CAAamB,OAAb,CAAqB,KAAKjB,SAAL,GACxB,oBADG,EAEHQ,OAFG,EAGHO,QAAQ,IAAI,EAHT,EAIHb,4BAJG,EAKHc,QALG,CAAP;AAMD,CARD;AAWA;;;;;;;;;;AAQAxB,KAAK,CAACC,KAAN,CAAYQ,kBAAZ,CAA+Ba,SAA/B,CAAyCrB,KAAzC,GACI,UAASe,OAAT,EAAkBO,QAAlB,EAA4B;AAC9B,SAAO,KAAKjB,OAAL,CAAaoB,SAAb,CAAuB,KAAKlB,SAAL,GAC1B,oBADG,EAEHQ,OAFG,EAGHO,QAAQ,IAAI,EAHT,EAIHb,4BAJG,CAAP;AAKD,CAPD;;AAUAiB,MAAM,CAACC,OAAP,GAAiB5B,KAAK,CAACC,KAAvB","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for login\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.login = require('./login_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.login.LoginClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.login.LoginPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.login.LoginRequest,\n *   !proto.login.LoginResponse>}\n */\nconst methodDescriptor_Login_login = new grpc.web.MethodDescriptor(\n  '/login.Login/login',\n  grpc.web.MethodType.UNARY,\n  proto.login.LoginRequest,\n  proto.login.LoginResponse,\n  /**\n   * @param {!proto.login.LoginRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.login.LoginResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.login.LoginRequest,\n *   !proto.login.LoginResponse>}\n */\nconst methodInfo_Login_login = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.login.LoginResponse,\n  /**\n   * @param {!proto.login.LoginRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.login.LoginResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.login.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.login.LoginResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.login.LoginResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.login.LoginClient.prototype.login =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/login.Login/login',\n      request,\n      metadata || {},\n      methodDescriptor_Login_login,\n      callback);\n};\n\n\n/**\n * @param {!proto.login.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.login.LoginResponse>}\n *     A native promise that resolves to the response\n */\nproto.login.LoginPromiseClient.prototype.login =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/login.Login/login',\n      request,\n      metadata || {},\n      methodDescriptor_Login_login);\n};\n\n\nmodule.exports = proto.login;\n\n"]},"metadata":{},"sourceType":"module"}