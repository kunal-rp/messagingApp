{"ast":null,"code":"const grpc = require('grpc');\n\nconst implementation = require('./clientimpl');\n\nvar protoLoader = require('@grpc/proto-loader');\n\nconst USER_PROTO_PATH = '../../proto/userhandler.proto';\n\nvar createPackageDef = path => protoLoader.loadSync(path, {\n  keepCase: true,\n  longs: String,\n  enums: String,\n  defaults: true,\n  oneofs: true\n});\n\nvar userhandler = grpc.loadPackageDefinition(createPackageDef(USER_PROTO_PATH)).userhandler;\nvar userClient = new userhandler.UserHandler('localhost:8081', grpc.credentials.createInsecure());\nexport const loginWithAccess = token => {\n  implementation.login(userClient, token);\n};","map":{"version":3,"sources":["/Users/kunal/Desktop/Coding/messageingApp/client-web/src/client/client.js"],"names":["grpc","require","implementation","protoLoader","USER_PROTO_PATH","createPackageDef","path","loadSync","keepCase","longs","String","enums","defaults","oneofs","userhandler","loadPackageDefinition","userClient","UserHandler","credentials","createInsecure","loginWithAccess","token","login"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,cAAD,CAA9B;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,oBAAD,CAAzB;;AAEA,MAAMG,eAAe,GAAG,+BAAxB;;AAEA,IAAIC,gBAAgB,GAAIC,IAAD,IAASH,WAAW,CAACI,QAAZ,CAC5BD,IAD4B,EAE5B;AAACE,EAAAA,QAAQ,EAAE,IAAX;AACCC,EAAAA,KAAK,EAAEC,MADR;AAECC,EAAAA,KAAK,EAAED,MAFR;AAGCE,EAAAA,QAAQ,EAAE,IAHX;AAICC,EAAAA,MAAM,EAAE;AAJT,CAF4B,CAAhC;;AASA,IAAIC,WAAW,GAAGd,IAAI,CAACe,qBAAL,CAA2BV,gBAAgB,CAACD,eAAD,CAA3C,EAA8DU,WAAhF;AAEA,IAAIE,UAAU,GAAG,IAAIF,WAAW,CAACG,WAAhB,CAA4B,gBAA5B,EACsBjB,IAAI,CAACkB,WAAL,CAAiBC,cAAjB,EADtB,CAAjB;AAGA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACzCnB,EAAAA,cAAc,CAACoB,KAAf,CAAqBN,UAArB,EAAiCK,KAAjC;AACA,CAFM","sourcesContent":["const grpc = require('grpc');\nconst implementation = require('./clientimpl');\nvar protoLoader = require('@grpc/proto-loader');\n\nconst USER_PROTO_PATH = '../../proto/userhandler.proto';\n\nvar createPackageDef = (path) =>protoLoader.loadSync(\n    path,\n    {keepCase: true,\n     longs: String,\n     enums: String,\n     defaults: true,\n     oneofs: true\n    });\n\nvar userhandler = grpc.loadPackageDefinition(createPackageDef(USER_PROTO_PATH)).userhandler;\n\nvar userClient = new userhandler.UserHandler('localhost:8081',\n                                       grpc.credentials.createInsecure());\n\nexport const loginWithAccess = (token) => {\n\timplementation.login(userClient, token);\n}\n"]},"metadata":{},"sourceType":"module"}